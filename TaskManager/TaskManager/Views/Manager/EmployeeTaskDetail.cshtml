@using TaskDomain.DomainModel
@using TaskManager.Content.Resources
@model TaskManager.ViewModels.EmployeeTaskDetailDm

@{
    ViewBag.Title = "EmployeeTaskDetail";
    Layout = "~/Views/Shared/_LayoutDefault.cshtml";
}
<script src="~/Scripts/kendo/jquery.min.js"></script>
<script src="~/Scripts/kendo/kendo.all.min.js"></script>
<script src="~/Scripts/kendo/kendo.aspnetmvc.min.js"></script>
@{ var user = (UserDetailDm) Session["SessionData"];}
<div class="row">

    <div class="ibox float-e-margins">
        <div class="wrapper wrapper-content">
            <div class="ibox-title">
                <h2>@user.FirstName @user.LastName's Tasks</h2>
            </div>


            <div class="ibox-content">

                <table class="table table-striped table-bordered table-hover dataTables" style="padding-bottom: 20px">
                    <thead>
                    <tr>
                        <th>Title</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Description</th>
                        <th>Task Status</th>
                            
                    </tr>

                    </thead>

                    <tbody>
                    @foreach (var data in Model.Task)
                    {
                        <tr>
                            <td> @data.Title </td>
                            <td> @data.StartDate.ToShortDateString() </td>
                            <td> @data.EndDate.ToShortDateString() </td>
                            <td> @data.Description </td>
                            <td> @data.TaskStatus </td>
                        </tr>

                    }

                    </tbody>
                </table>
               
                <div class="row">

                    <div class="col-lg-6">
                        <div class="flot-chart">
                            <div class="flot-chart-content" id="flot-dashboard-chart">
                                <div class="demo-section k-content wide">

                                    @(Html.Kendo().Chart()
                                          .Name("chart")
                                          .Title("Task Status Column chart")
                                          .Legend(legend => legend
                                              .Position(ChartLegendPosition.Top)
                                          )
                                          .ChartArea(chartArea => chartArea
                                              .Background("transparent")
                                          )
                                          .Series(series =>
                                          {
                                              series.Column(new double[] { Model.TaskCount.Pending }).Name("Tasks").Color(ServiceLayerLinkResource.LightGreyishBlue);
                                              series.Column(new double[] { Model.TaskCount.InProgress }).Name("Tasks").Color(ServiceLayerLinkResource.GreyishBlue);
                                              series.Column(new double[] { Model.TaskCount.Completed }).Name("Tasks").Color(ServiceLayerLinkResource.DeepGreyishBlue);
                                    
                                          })
                                          .CategoryAxis(axis => axis
                                              .Name("series-axis")
                                              .Line(line => line.Visible(false))
                                          )
                                          .CategoryAxis(axis => axis
                                              .Name("label-axis")
                                              .Categories(ServiceLayerLinkResource.Pending, ServiceLayerLinkResource.InProgress, ServiceLayerLinkResource.Completed)
                                          )
                                          .ValueAxis(axis => axis
                                              .Numeric()
                                              .Labels(labels => labels.Format("{0}"))

                                              // Move the label-axis all the way down the value axis
                                              .AxisCrossingValue(0, int.MinValue)
                                          )
                                          .Tooltip(tooltip => tooltip
                                              .Visible(true)
                                              .Format("{0}")
                                              .Template("#= series.name #: #= value #")
                                          )
                                    )
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        @if (Model.TaskCount.Total != 0)
                        {
                            <div class="demo-section k-content wide">
                                @(Html.Kendo().Chart()
        .Name("Paichart")
                .Title(title => title
                    .Text("Task Status Pie chart")
                    .Position(ChartTitlePosition.Top))
        .Legend(legend => legend
            .Visible(false)
        )
        .ChartArea(chart => chart
            .Background("transparent")
         )
        .Series(series =>
        {
            series.Pie(new dynamic[] {
                 new {category=ServiceLayerLinkResource.Pending,value=Math.Round(((double)Model.TaskCount.Pending/Model.TaskCount.Total*100),2),color=ServiceLayerLinkResource.LightGreyishBlue},
                 new {category=ServiceLayerLinkResource.InProgress,value=Math.Round(((double)Model.TaskCount.InProgress/Model.TaskCount.Total*100),2),color=ServiceLayerLinkResource.GreyishBlue},
                 new {category=ServiceLayerLinkResource.Completed,value=Math.Round(((double)Model.TaskCount.Completed/Model.TaskCount.Total*100),2),color=ServiceLayerLinkResource.DeepGreyishBlue}
            })
            .Labels(labels => labels
                .Template("#= category #: \n #= value#%")
                .Background("transparent")
                .Visible(true)
            )
            .StartAngle(150);

        })
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0}")
        )
                                )

                            </div>
                        }

                    </div>
                </div>
            </div>

        </div>
    </div>

</div>